%% KF估计无人机飞行轨迹

%% 场景假设
% 无人机按照螺旋线飞行，半径为20m，螺距为40m，100s完成一圈飞行
% GPS精度为1m、气压计精度为0.5m
% 数据采集频率为10Hz

clc
clear all
close all

%% 参数定义
D = 3;                          % 维度3 
dt = 0.1;                       % 由频率知，每0.1s采集一次数据
t0 = 0:dt:100;                  % 0~100s
N = length(t0);                 % 采样点数

%% 系统状态空间描述
A = eye(D);                     % 状态转移矩阵，和上一时刻状态没有换算，故A取D阶单位矩阵
H = eye(D);                     % 量测矩阵H
x = zeros(D, N);                % 存储滤波后的预测数据x
x(:, 1) = zeros(D,1);           % x初始值设为 0
z = ones(D, N);                 % z存储滤波前的量测数据
P = eye(D);                     % 估计误差方差P，初始值为 1，取D阶单位矩阵
Q = 0.01*eye(D);                % 过程噪声协方差Q
R = [1 0 0;
     0 1 0;
     0 0 0.5];                  % 量测噪声协方差R，既是传感器精度

%% 无人机运动描述
r = 20;                         % 绕圈半径，20m
w = 2*pi / 100;                 % 角速度，100s绕一圈
true = [r * cos(w*t0); r * sin(w*t0); t0 * 0.4]; % 三维 x,y,z方向，理想值 

%% 卡尔曼滤波公式迭代
k = 1;                                                                  % 采样点计数
for t = dt:dt:100
    k = k + 1;                  
    x(:,k) = A * x(:,k-1);                                              % 卡尔曼公式1
    P = A * P * A' + Q;                                                 % 卡尔曼公式2
    K = P*H' /(H*P*H' + R);                                             % 卡尔曼公式3
    z(:,k) = [true(1,k) + randn; true(2,k) + randn; true(3,k) + randn]; % 三维 x,y,z 方向，滤波前的数据
    x(:,k) = x(:,k) + K * (z(:,k)-H*x(:,k));                            % 卡尔曼公式4
    P = (eye(D)-K*H) * P;                                               % 卡尔曼公式5
end

%% 绘图
plot3(z(1,:),z(2,:),z(3,:),'b.');               % 绘制滤波前的量测数据，“蓝色”
axis('equal');                                  % 坐标等距
grid on;                                        % 添加网格
hold on                                         % 继续绘图
plot3(x(1,:),x(2,:),x(3,:),'r.');               % 绘制滤波后预测数据，“红色”
plot3(true(1,:), true(2,:), true(3,:),'k.');    % 绘制理想值，“黑色”
legend('量测值','预测值','理想值');
xlabel('x方向: m');
ylabel('y方向: m');
zlabel('高度: m');hold off;